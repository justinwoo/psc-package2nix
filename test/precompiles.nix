# This file was generated by Psc-Package2Nix Precompile
# You will not want to edit this file.
# To change the contents of this file, first fork Psc-Package2Nix
# And edit the $file_template
{ pkgs ? import <nixpkgs> {} }:

let
  packagesImport = import ./packages.nix {};
  packages = packagesImport.inputs;
  easy-ps = import (pkgs.fetchFromGitHub {
    owner = "justinwoo";
    repo = "easy-purescript-nix";
    rev = "347ab7c91634462c2039c6c0641af5386c251a98";
    sha256 = "0njhcl7dq58b3kmjbz6ndsccv4pcmdxc5lg7p13115phcmznpn99";
  });

  inputs = {
  "console" = pkgs.stdenv.mkDerivation {
    inherit(packages."console")
    name
    version
    src;
    buildInputs = [easy-ps.inputs.purs];
    dontInstall = true;
    buildPhase = ''
        mkdir -p $out
        cp -r ${packages."console".outPath}/src $out/src

        mkdir -p $out/output
        purs compile "${packages."console".outPath}/src/**/*.purs" "${packages."effect".outPath}/src/**/*.purs" "${packages."prelude".outPath}/src/**/*.purs" -o $out/output
    '';
  };

  "effect" = pkgs.stdenv.mkDerivation {
    inherit(packages."effect")
    name
    version
    src;
    buildInputs = [easy-ps.inputs.purs];
    dontInstall = true;
    buildPhase = ''
        mkdir -p $out
        cp -r ${packages."effect".outPath}/src $out/src

        mkdir -p $out/output
        purs compile "${packages."effect".outPath}/src/**/*.purs" "${packages."prelude".outPath}/src/**/*.purs" -o $out/output
    '';
  };

  "prelude" = pkgs.stdenv.mkDerivation {
    inherit(packages."prelude")
    name
    version
    src;
    buildInputs = [easy-ps.inputs.purs];
    dontInstall = true;
    buildPhase = ''
        mkdir -p $out
        cp -r ${packages."prelude".outPath}/src $out/src

        mkdir -p $out/output
        purs compile "${packages."prelude".outPath}/src/**/*.purs" -o $out/output
    '';
  };

  };

in {
  inherit inputs;
  inherit (packagesImport)
  set
  source;
}
